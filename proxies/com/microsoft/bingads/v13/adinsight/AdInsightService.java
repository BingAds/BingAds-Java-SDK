
package com.microsoft.bingads.v13.adinsight;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.1
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "AdInsightService", targetNamespace = "https://bingads.microsoft.com/AdInsight/v13", wsdlLocation = "https://adinsight.api.sandbox.bingads.microsoft.com/Api/Advertiser/AdInsight/V13/AdInsightService.svc?wsdl")
public class AdInsightService
    extends Service
{

    private static final URL ADINSIGHTSERVICE_WSDL_LOCATION;
    private static final WebServiceException ADINSIGHTSERVICE_EXCEPTION;
    private static final QName ADINSIGHTSERVICE_QNAME = new QName("https://bingads.microsoft.com/AdInsight/v13", "AdInsightService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://adinsight.api.sandbox.bingads.microsoft.com/Api/Advertiser/AdInsight/V13/AdInsightService.svc?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ADINSIGHTSERVICE_WSDL_LOCATION = url;
        ADINSIGHTSERVICE_EXCEPTION = e;
    }

    public AdInsightService() {
        super(__getWsdlLocation(), ADINSIGHTSERVICE_QNAME);
    }

    public AdInsightService(WebServiceFeature... features) {
        super(__getWsdlLocation(), ADINSIGHTSERVICE_QNAME, features);
    }

    public AdInsightService(URL wsdlLocation) {
        super(wsdlLocation, ADINSIGHTSERVICE_QNAME);
    }

    public AdInsightService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ADINSIGHTSERVICE_QNAME, features);
    }

    public AdInsightService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AdInsightService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns IAdInsightService
     */
    @WebEndpoint(name = "BasicHttpBinding_IAdInsightService_IAdInsightService")
    public IAdInsightService getBasicHttpBindingIAdInsightServiceIAdInsightService() {
        return super.getPort(new QName("https://bingads.microsoft.com/AdInsight/v13", "BasicHttpBinding_IAdInsightService_IAdInsightService"), IAdInsightService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IAdInsightService
     */
    @WebEndpoint(name = "BasicHttpBinding_IAdInsightService_IAdInsightService")
    public IAdInsightService getBasicHttpBindingIAdInsightServiceIAdInsightService(WebServiceFeature... features) {
        return super.getPort(new QName("https://bingads.microsoft.com/AdInsight/v13", "BasicHttpBinding_IAdInsightService_IAdInsightService"), IAdInsightService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ADINSIGHTSERVICE_EXCEPTION!= null) {
            throw ADINSIGHTSERVICE_EXCEPTION;
        }
        return ADINSIGHTSERVICE_WSDL_LOCATION;
    }

}
